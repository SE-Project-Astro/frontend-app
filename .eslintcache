[{"C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\App.jsx":"1","C:\\code\\SE-Project-Astro\\frontend-app\\src\\redux\\slices\\authSlice.js":"2","C:\\code\\SE-Project-Astro\\frontend-app\\src\\components\\Navbars\\NormalNavbar.js":"3","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\NewRegisterPage.js":"4","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\LandingPage.js":"5","C:\\code\\SE-Project-Astro\\frontend-app\\src\\redux\\slices\\newsSlice.js":"6","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\AstroObjects\\index.jsx":"7","C:\\code\\SE-Project-Astro\\frontend-app\\src\\components\\CardWithImage\\index.jsx":"8","C:\\code\\SE-Project-Astro\\frontend-app\\src\\components\\Navbars\\ExamplesNavbar.js":"9","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\NewProfilePage.js":"10","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\NewsPage\\index.jsx":"11","C:\\code\\SE-Project-Astro\\frontend-app\\src\\components\\cards.js":"12","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\ProfilePage.js":"13","C:\\code\\SE-Project-Astro\\frontend-app\\src\\redux\\slices\\astroObjectSlice.js":"14","C:\\code\\SE-Project-Astro\\frontend-app\\src\\redux\\store.js":"15","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\AddNewAstroObj\\AddNewAstroObj.jsx":"16","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\NewsPage\\News\\index.jsx":"17","C:\\code\\SE-Project-Astro\\frontend-app\\src\\components\\Footer\\Footer.js":"18","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\NewLandingPage.js":"19","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\RegisterPage.js":"20","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\AstroObjects\\AstroObject\\index.jsx":"21","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\LoginPage.js":"22","C:\\code\\SE-Project-Astro\\frontend-app\\src\\variables\\charts.js":"23","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\AddNews\\AddNews.jsx":"24"},{"size":3902,"mtime":1611496154787,"results":"25","hashOfConfig":"26"},{"size":4123,"mtime":1611496308412,"results":"27","hashOfConfig":"26"},{"size":7987,"mtime":1611481783173,"results":"28","hashOfConfig":"26"},{"size":11447,"mtime":1611484254954,"results":"29","hashOfConfig":"26"},{"size":23431,"mtime":1611293246449,"results":"30","hashOfConfig":"26"},{"size":2522,"mtime":1611505848916,"results":"31","hashOfConfig":"26"},{"size":2233,"mtime":1611498397432,"results":"32","hashOfConfig":"26"},{"size":2046,"mtime":1611379698446,"results":"33","hashOfConfig":"26"},{"size":6001,"mtime":1611293246432,"results":"34","hashOfConfig":"26"},{"size":8025,"mtime":1611508146397,"results":"35","hashOfConfig":"26"},{"size":4720,"mtime":1611505720293,"results":"36","hashOfConfig":"26"},{"size":1911,"mtime":1611355868545,"results":"37","hashOfConfig":"26"},{"size":17282,"mtime":1611293246450,"results":"38","hashOfConfig":"26"},{"size":4112,"mtime":1611501382118,"results":"39","hashOfConfig":"26"},{"size":377,"mtime":1611423888073,"results":"40","hashOfConfig":"26"},{"size":4036,"mtime":1611507398345,"results":"41","hashOfConfig":"26"},{"size":3735,"mtime":1611497698658,"results":"42","hashOfConfig":"26"},{"size":4480,"mtime":1611359654663,"results":"43","hashOfConfig":"26"},{"size":8844,"mtime":1611474274323,"results":"44","hashOfConfig":"26"},{"size":8057,"mtime":1611293246450,"results":"45","hashOfConfig":"26"},{"size":4230,"mtime":1611504789185,"results":"46","hashOfConfig":"26"},{"size":10356,"mtime":1611474274322,"results":"47","hashOfConfig":"26"},{"size":3110,"mtime":1611293246437,"results":"48","hashOfConfig":"26"},{"size":3686,"mtime":1611505311778,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"jnf4jx",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"63"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"73"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\App.jsx",["111","112"],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\redux\\slices\\authSlice.js",[],["113","114"],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\components\\Navbars\\NormalNavbar.js",["115","116","117","118","119","120"],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\NewRegisterPage.js",["121","122","123","124","125"],"\r\nimport React from \"react\";\r\nimport classnames from \"classnames\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardImg,\r\n  CardTitle,\r\n  Label,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport RegNavbar from \"components/Navbars/RegNavbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { registerThunkFunction } from \"../../redux/slices/authSlice\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function RegisterPage() {\r\n  //mouse following square states  \r\n  const [squares1to6, setSquares1to6] = React.useState(\"\");\r\n  const [squares7and8, setSquares7and8] = React.useState(\"\");\r\n\r\n  //form focusing states\r\n  const [fullNameFocus, setFullNameFocus] = React.useState(false);\r\n  const [lastNameFocus, setLastNameFocus] = React.useState(false);\r\n  const [emailFocus, setEmailFocus] = React.useState(false);\r\n  const [passwordFocus, setPasswordFocus] = React.useState(false);\r\n\r\n  //states for validation purposes\r\n  const [stateInput,setStateInput]=React.useState({input: {} });\r\n  const [stateError,setStateError]=React.useState({error: {} });\r\n\r\n  const history = useHistory();\r\n\r\n  //functions for validation\r\n  const validate = () => {\r\n      let input=stateInput.input;\r\n      let error ={};\r\n      let isValid= true;\r\n\r\n      if (!input[\"First\"]) {\r\n        isValid = false;\r\n        error[\"First\"] = \"Please enter your First name.\";\r\n      }\r\n\r\n      if (!input[\"Last\"]) {\r\n        isValid = false;\r\n        error[\"Last\"] = \"Please enter your Last name.\";\r\n      }\r\n\r\n      if (!input[\"Email\"]) {\r\n        isValid = false;\r\n        error[\"Email\"] = \"Please enter your Email.\";\r\n      }\r\n      if (typeof input[\"Email\"] !== \"undefined\") {\r\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if (!pattern.test(input[\"Email\"])) {\r\n          isValid = false;\r\n          error[\"Email\"] = \"Please enter valid email address.\";\r\n        }\r\n      }\r\n\r\n      if (!input[\"Password\"]) {\r\n        isValid = false;\r\n        error[\"Password\"] = \"Please enter a Password.\";\r\n      }\r\n\r\n      setStateError({\r\n\r\n        error: error\r\n\r\n      });\r\n      return isValid;\r\n\r\n      \r\n  }\r\n\r\n\r\n  //for authendication purposes\r\n    const dispatch = useDispatch();\r\n    const submitHandler = async (email,password,firstName,lastName) => {\r\n        \r\n        const response = await dispatch(registerThunkFunction(email, password,firstName,lastName))\r\n        if(response === \"success\") {\r\n          history.push('/login');\r\n        }\r\n        else {\r\n          console.log(response);\r\n        }\r\n    }\r\n\r\n  const handleChange = (event) => {\r\n      let input =stateInput.input;\r\n      input[event.target.name]=event.target.value;\r\n\r\n      setStateInput({\r\n          input: input\r\n      });\r\n      \r\n  };\r\n\r\n  const handleSubmit = (event) =>{\r\n      event.preventDefault();\r\n      if(validate()){\r\n        console.log(stateInput);\r\n        let input = {};\r\n        let Email= stateInput.input.Email;\r\n        let Password=stateInput.input.Password;\r\n        let First= stateInput.input.First;\r\n        let Last=stateInput.input.Last;\r\n\r\n        input[\"First\"] =\"\";\r\n        input[\"Last\"] =\"\";\r\n        input[\"Email\"] =\"\";\r\n        input[\"Password\"]=\"\";\r\n\r\n\r\n        setStateInput({\r\n          input:input\r\n        });   \r\n        submitHandler(Email,Password,First,Last);  \r\n      }\r\n  }\r\n\r\n  //mouse following square effects on the page\r\n  React.useEffect(() => {\r\n    document.body.classList.toggle(\"register-page\");\r\n    document.documentElement.addEventListener(\"mousemove\", followCursor);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      document.body.classList.toggle(\"register-page\");\r\n      document.documentElement.removeEventListener(\"mousemove\", followCursor);\r\n    };\r\n  },[]);\r\n\r\n  const followCursor = (event) => {\r\n    let posX = event.clientX - window.innerWidth / 2;\r\n    let posY = event.clientY - window.innerWidth / 6;\r\n    setSquares1to6(\r\n      \"perspective(500px) rotateY(\" +\r\n        posX * 0.05 +\r\n        \"deg) rotateX(\" +\r\n        posY * -0.05 +\r\n        \"deg)\"\r\n    );\r\n    setSquares7and8(\r\n      \"perspective(500px) rotateY(\" +\r\n        posX * 0.02 +\r\n        \"deg) rotateX(\" +\r\n        posY * -0.02 +\r\n        \"deg)\"\r\n    );\r\n  };\r\n\r\n\r\n\r\n  //form of sign in\r\n  return (\r\n      \r\n    <>\r\n      \r\n      \r\n      <div className=\"wrapper\">\r\n        <div className=\"page-header\">\r\n          <div className=\"page-header-image\" />\r\n          <div className=\"content\">\r\n            <Container>\r\n              <Row>\r\n                <Col className=\"offset-lg-0 offset-md-3\" lg=\"5\" md=\"6\">\r\n                  \r\n                  <Card className=\"card-register\">\r\n                    <CardHeader>\r\n                      <CardImg\r\n                        alt=\"...\"\r\n                        src={require(\"assets/img/square-purple-1.png\").default}\r\n                      />\r\n                      <CardTitle tag=\"h4\">sign UP</CardTitle>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <Form className=\"form\" onSubmit={(e)=>handleSubmit(e)}>\r\n                        <InputGroup\r\n                          className={classnames({\r\n                            \"input-group-focus\": fullNameFocus,\r\n                          })}\r\n                        >\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"tim-icons icon-single-02\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"First Name\"\r\n                            type=\"text\"\r\n                            name=\"First\"\r\n                            value={stateInput.input.First}\r\n                            onChange={(e) => handleChange(e)}\r\n                            onFocus={(e) => setFullNameFocus(true)}\r\n                            onBlur={(e) => setFullNameFocus(false)}\r\n                          />\r\n                          \r\n                          \r\n                        </InputGroup>\r\n                            <div>{stateError.error.First}</div>\r\n                        <InputGroup\r\n                          className={classnames({\r\n                            \"input-group-focus\": lastNameFocus,\r\n                          })}\r\n                        >\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"tim-icons icon-single-02\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Last Name\"\r\n                            type=\"text\"\r\n                            name=\"Last\"\r\n                            value={stateInput.input.Last}\r\n                            onChange={(e) => handleChange(e)}\r\n                            onFocus={(e) => setLastNameFocus(true)}\r\n                            onBlur={(e) => setLastNameFocus(false)}\r\n                          />\r\n                        </InputGroup>\r\n                            <div>{stateError.error.Last}</div>\r\n                        <InputGroup\r\n                          className={classnames({\r\n                            \"input-group-focus\": emailFocus,\r\n                          })}\r\n                        >\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"tim-icons icon-email-85\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Email\"\r\n                            type=\"text\"\r\n                            name=\"Email\"\r\n                            value={stateInput.input.Email}\r\n                            onChange={(e) => handleChange(e)}\r\n                            onFocus={(e) => setEmailFocus(true)}\r\n                            onBlur={(e) => setEmailFocus(false)}\r\n                          />\r\n                        </InputGroup>\r\n                            <div>{stateError.error.Email}</div>\r\n                        <InputGroup\r\n                          className={classnames({\r\n                            \"input-group-focus\": passwordFocus,\r\n                          })}\r\n                        >\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"tim-icons icon-lock-circle\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            name=\"Password\"\r\n                            value={stateInput.input.Password}\r\n                            onChange={(e) => handleChange(e)}\r\n                            onFocus={(e) => setPasswordFocus(true)}\r\n                            onBlur={(e) => setPasswordFocus(false)}\r\n                          />\r\n                        </InputGroup>\r\n                            <div>{stateError.error.Password}</div>\r\n                        \r\n                        <br/>\r\n                        <Button type=\"submit\" className=\"btn-round\" color=\"primary\" size=\"lg\">\r\n                            Register\r\n                        </Button>\r\n                      </Form>\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      \r\n                    </CardFooter>\r\n                    \r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"register-bg\" />\r\n              <div\r\n                className=\"square square-1\"\r\n                id=\"square1\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-2\"\r\n                id=\"square2\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-3\"\r\n                id=\"square3\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-4\"\r\n                id=\"square4\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-5\"\r\n                id=\"square5\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-6\"\r\n                id=\"square6\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n            </Container>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",["126","127"],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\LandingPage.js",[],["128","129"],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\redux\\slices\\newsSlice.js",["130","131"],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\AstroObjects\\index.jsx",[],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\components\\CardWithImage\\index.jsx",["132","133"],"import React from 'react';\r\nimport {Col, Card, CardImgOverlay, CardImg, CardText, CardTitle} from \"reactstrap\";\r\nimport {createUseStyles} from 'react-jss'\r\n\r\nconst useStyles = createUseStyles({\r\n    customCard: {\r\n        borderRadius: \"16px\",\r\n        transition: 'all 0.2s ease',\r\n        height: props => props.height,\r\n        backgroundImage: props => `url(${props.image})`,\r\n        backgroundSize: \"cover\",\r\n        '&:hover': {\r\n            transform: props => props.isInList ? 'scale(1.05)' : 'scale(1)',\r\n            transition: 'all 0.2s ease',\r\n        }\r\n    },\r\n    cardImgOverlay: {\r\n        backgroundColor: props => props.isInList ? [[\"rgba(0,0,0,0.6)\", \"!important\"]] : [],\r\n        borderRadius: \"16px\",\r\n        '&:hover': {\r\n            backdropFilter: props => props.isInList ? 'blur(5px)' : 'blur(0)',\r\n            transition: 'all 0.2s ease',\r\n        }\r\n    },\r\n    cardImg: {\r\n        backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n        borderRadius: '16px'\r\n    },\r\n    cardTitle: {\r\n        fontFamily: \"Nunito, sans-serif\",\r\n        fontWeight: 'bold',\r\n    }\r\n})\r\n\r\nconst CardWithImage = (props) => {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <Card inverse className={classes.customCard}>\r\n            <CardImgOverlay className={classes.cardImgOverlay}>\r\n                <CardTitle tag={props.headingType} className={classes.cardTitle}>{props.cardTitle}</CardTitle>\r\n                <CardText style={{fontFamily: \"Nunito, sans-serif\"}}>{props.cardText}</CardText>\r\n                <CardText>\r\n                    <small className=\"text-muted\">{props.lastUpdatedText}</small>\r\n                </CardText>\r\n            </CardImgOverlay>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CardWithImage;\r\n\r\nCardWithImage.defaultProps = {\r\n    headingType: \"h4\",\r\n    height: \"260px\",\r\n    cardText: \"This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\",\r\n    lastUpdatedText: \"Last updated 3 mins ago\",\r\n    isInList: true\r\n}","C:\\code\\SE-Project-Astro\\frontend-app\\src\\components\\Navbars\\ExamplesNavbar.js",[],["134","135"],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\NewProfilePage.js",["136","137","138","139","140"],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\NewsPage\\index.jsx",["141","142","143","144","145","146","147"],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\components\\cards.js",[],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\ProfilePage.js",[],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\redux\\slices\\astroObjectSlice.js",["148","149","150","151"],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\redux\\store.js",[],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\AddNewAstroObj\\AddNewAstroObj.jsx",["152","153","154","155"],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\NewsPage\\News\\index.jsx",["156","157"],"import React, { useCallback } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { timeDifference } from \"../../../helper/helper\";\r\nimport CardWithImage from \"components/CardWithImage\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst News = ({ match }) => {\r\n  const history = useHistory();\r\n  const handleUpdate = useCallback(\r\n    (id) => history.replace(`/newsUpdate/${id}`),\r\n    [history]\r\n  );\r\n  const { newsId } = match.params;\r\n  const news = useSelector((state) =>\r\n    state.news.news.find((newsItem) => newsItem.news_id === parseInt(newsId))\r\n  );\r\n\r\n  console.log(news);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"section section-lg\">\r\n        <section className=\"section\">\r\n          <Container>\r\n            <Row>\r\n              <h1 className=\"title\">{news.title}</h1>\r\n            </Row>\r\n            <Row>\r\n              <CardWithImage\r\n                image={news.image}\r\n                headingType=\"h2\"\r\n                height=\"520px\"\r\n                cardTitle=\"\"\r\n                cardText=\"\"\r\n                isInList={false}\r\n                lastUpdatedText={timeDifference(news.timestamp)}\r\n              />\r\n            </Row>\r\n            <div style={({ backgroundColor: \"white\" }, { color: \"white\" })}>\r\n              {htmlToReact(news.description)}\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h3>{` ${2} Comments`}</h3>\r\n              <form>\r\n                <FormGroup>\r\n                  <Label style={{ color: \"white\" }} for=\"userComment\">\r\n                    User Name\r\n                  </Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"text\"\r\n                    id=\"userComment\"\r\n                    placeholder=\"Add a public comment...\"\r\n                  />\r\n                </FormGroup>\r\n                <div className=\"text-right\">\r\n                  <Button color=\"secondary\">Cancel</Button>\r\n                  <Button color=\"primary\" type=\"submit\">\r\n                    Comment\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n              <div>\r\n                <Row className=\"mt-3\">\r\n                  <strong style={{ color: \"white\" }}>User name 1</strong>\r\n                  <div className=\"ml-2\">1 month ago</div>\r\n                </Row>\r\n                <Row>\r\n                  <p className=\"mt-2 ml-4\">\r\n                    The HTML element defines text with strong importance. The\r\n                    content inside is typically displayed in bold.\r\n                  </p>\r\n                </Row>\r\n                <Row className=\"mt-3\">\r\n                  <strong style={{ color: \"white\" }}>User name 2</strong>\r\n                  <div className=\"ml-2\">1 month ago</div>\r\n                </Row>\r\n                <Row>\r\n                  <p className=\"mt-2 ml-4\">\r\n                    The HTML element defines text with strong importance. The\r\n                    content inside is typically displayed in bold.\r\n                  </p>\r\n                </Row>\r\n              </div>\r\n            </div>\r\n          </Container>\r\n        </section>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default News;\r\n\r\nfunction htmlToReact(html) {\r\n  //var ReactDOMServer = require(\"react-dom/server\");\r\n  var HtmlToReactParser = require(\"html-to-react\").Parser;\r\n  var htmlInput = html;\r\n  var htmlToReactParser = new HtmlToReactParser();\r\n  var reactElement = htmlToReactParser.parse(htmlInput);\r\n  //var reactHtml = ReactDOMServer.renderToStaticMarkup(reactElement);\r\n  //console.log(reactHtml);\r\n  return reactElement;\r\n}\r\n","C:\\code\\SE-Project-Astro\\frontend-app\\src\\components\\Footer\\Footer.js",["158","159","160"],"/*!\r\n\r\n=========================================================\r\n* BLK Design System React - v1.2.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/blk-design-system-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/blk-design-system-react/blob/main/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  UncontrolledTooltip,\r\n} from \"reactstrap\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container>\r\n        <Row>\r\n          <Col md=\"3\">\r\n            <h1 className=\"title\">BLK•</h1>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <Nav>\r\n              <NavItem>\r\n                <NavLink to=\"/\" tag={Link}>\r\n                  Home\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/landing-page\" tag={Link}>\r\n                  Landing\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/register-page\" tag={Link}>\r\n                  Register\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/profile-page\" tag={Link}>\r\n                  Profile\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <Nav>\r\n              <NavItem>\r\n                <NavLink href=\"https://creative-tim.com/contact-us?ref=blkdsr-footer\">\r\n                  Contact Us\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"https://creative-tim.com/about-us?ref=blkdsr-footer\">\r\n                  About Us\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"https://creative-tim.com/blog?ref=blkdsr-footer\">\r\n                  Blog\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"https://opensource.org/licenses/MIT\">\r\n                  License\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <h3 className=\"title\">Follow us:</h3>\r\n            <div className=\"btn-wrapper profile\">\r\n              <Button\r\n                className=\"btn-icon btn-neutral btn-round btn-simple\"\r\n                color=\"default\"\r\n                href=\"https://twitter.com/creativetim\"\r\n                id=\"tooltip622135962\"\r\n              >\r\n                <img src=\"https://icons-for-free.com/iconfiles/png/512/color+twitter+icon-1320168273637260673.png\" />\r\n              </Button>\r\n              <UncontrolledTooltip delay={0} target=\"tooltip622135962\">\r\n                Follow us\r\n              </UncontrolledTooltip>\r\n              <Button\r\n                className=\"btn-icon btn-neutral btn-round btn-simple\"\r\n                color=\"default\"\r\n                href=\"https://www.facebook.com/creativetim\"\r\n                id=\"tooltip230450801\"\r\n                target=\"_blank\"\r\n              >\r\n                <img src=\"https://icons-for-free.com/iconfiles/png/512/color+facebook+icon-1320168272811213233.png\" />\r\n              </Button>\r\n              <UncontrolledTooltip delay={0} target=\"tooltip230450801\">\r\n                Like us\r\n              </UncontrolledTooltip>\r\n              <Button\r\n                className=\"btn-icon btn-neutral btn-round btn-simple\"\r\n                color=\"default\"\r\n                href=\"https://dribbble.com/creativetim\"\r\n                id=\"tooltip318450378\"\r\n                target=\"_blank\"\r\n              >\r\n                <img src=\"https://icons-for-free.com/iconfiles/png/512/color+instagram+icon-1320168273182259018.png\" />\r\n              </Button>\r\n              <UncontrolledTooltip delay={0} target=\"tooltip318450378\">\r\n                Follow us\r\n              </UncontrolledTooltip>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\NewLandingPage.js",["161","162","163","164","165","166","167","168","169"],"\r\nimport React from \"react\";\r\n\r\n\r\n// core components\r\n\r\nimport NormalNavbar from \"components/Navbars/NormalNavbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport Cards from \"components/cards.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardTitle,\r\n  ListGroupItem,\r\n  ListGroup,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  UncontrolledCarousel,\r\n} from \"reactstrap\";\r\nconst carouselItems = [\r\n  \r\n  {\r\n    src: require(\"assets/img/Landing/landing2.jpg\").default,\r\n    altText: \"Slide 2\",\r\n    caption: \"\",\r\n  },\r\n  {\r\n    src: require(\"assets/img/Landing/landing3.jpg\").default,\r\n    altText: \"Slide 3\",\r\n    caption: \"\",\r\n  },\r\n  {\r\n    src: require(\"assets/img/Landing/landing4.jpg\").default,\r\n    altText: \"Slide 3\",\r\n    caption: \"\",\r\n  },\r\n];\r\n\r\nexport default function LandingPage() {\r\n  React.useEffect(() => {\r\n    document.body.classList.toggle(\"landing-page\");\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      document.body.classList.toggle(\"landing-page\");\r\n    };\r\n  },[]);\r\n  return (\r\n    <>\r\n      <NormalNavbar />\r\n      <div className=\"wrapper\">\r\n        <div className=\"page-header\">\r\n          <img\r\n            alt=\"...\"\r\n            className=\"path\"\r\n            src={require(\"assets/img/blob.png\").default}\r\n          />\r\n          <img\r\n            alt=\"...\"\r\n            className=\"path2\"\r\n            src={require(\"assets/img/path2.png\").default}\r\n          />\r\n          <img\r\n            alt=\"...\"\r\n            className=\"shapes triangle\"\r\n            src={require(\"assets/img/triunghiuri.png\").default}\r\n          />\r\n          <img\r\n            alt=\"...\"\r\n            className=\"shapes wave\"\r\n            src={require(\"assets/img/waves.png\").default}\r\n          />\r\n          <img\r\n            alt=\"...\"\r\n            className=\"shapes squares\"\r\n            src={require(\"assets/img/patrat.png\").default}\r\n          />\r\n          <img\r\n            alt=\"...\"\r\n            className=\"shapes circle\"\r\n            src={require(\"assets/img/cercuri.png\").default}\r\n          /> \r\n\r\n\r\n\r\n          \r\n            <div className=\"section\">\r\n              <Container>\r\n                <div className=\"title\">\r\n                  <h3>A Guide to Astronomy</h3>\r\n                  <br/>\r\n                  <br/><br/>\r\n                </div>\r\n                <Row className=\"justify-content-between align-items-center\">\r\n                  <Col className=\"mb-5 mb-lg-0\" lg=\"5\">\r\n                    <h1 className=\"text-white font-weight-light\">\r\n                      Are you an enthusiastic person to learn Astronomy?\r\n                    </h1>\r\n                    <p className=\"text-white mt-4\">\r\n                      Astronomy can be a fascinating and rewarding pastime,\r\n                       whether you have a substantial telescope and accessories such as a CCD camera,\r\n                        or are a beginner observing with the naked eye. It is one of the few sciences\r\n                         where amateurs make genuine contributions to research, but many observers simply do it \r\n                         for the excitement of seeing with their own eyes the planets, star clusters, nebulae and\r\n                          so on that are familiar from books. Observing directly by eye with an amateur telescope,\r\n                           it is not possible to see most astronomical objects with the amount of detail and colour\r\n                            captured in the images recorded by large professional instruments.\r\n                    </p>\r\n              \r\n                  </Col>\r\n                  <Col lg=\"6\">\r\n                    <UncontrolledCarousel\r\n                      items={carouselItems}\r\n                      indicators={false}\r\n                      autoPlay={true}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </div> \r\n        </div>\r\n\r\n\r\n\r\n        <section className=\"section section-lg\">\r\n            <section className=\"section section-lg\">\r\n                \r\n                  <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                      <Col lg=\"12\">\r\n                        <h1 className=\"text-center\">Benifits of using GUIDE Astro</h1>\r\n                        <Row className=\"row-grid justify-content-center\">\r\n                          <Col lg=\"3\">\r\n                            <div className=\"info\">\r\n                              <div className=\"icon icon-primary\">\r\n                                <i className=\"tim-icons icon-money-coins\" />\r\n                              </div>\r\n                              <h4 className=\"info-title\">Can save money</h4>\r\n                              <hr className=\"line-primary\" />\r\n                              <p>\r\n                                Most astronomical equipments are very expensive. But its very hard to see astronomical\r\n                                objects through it. some times you have to rent those instruments for days.If you use this Guide\r\n                                you can get updated about astronomical events in advance and you can be ready for it.\r\n                              </p>\r\n                            </div>\r\n                          </Col>\r\n                          <Col lg=\"3\">\r\n                            <div className=\"info\">\r\n                              <div className=\"icon icon-warning\">\r\n                                <i className=\"tim-icons icon-chart-pie-36\" />\r\n                              </div>\r\n                              <h4 className=\"info-title\">Time Saving</h4>\r\n                              <hr className=\"line-warning\" />\r\n                              <p>\r\n                                To see a little astronomical object, sometimes you have to wait an hours, sometimes a full day \r\n                                to see it. but in this real time updating application you can be updated about any atronomical \r\n                                object and you don't have to look sky all the time. \r\n                              </p>\r\n                            </div>\r\n                          </Col>\r\n                          <Col lg=\"3\">\r\n                            <div className=\"info\">\r\n                              <div className=\"icon icon-success\">\r\n                                <i className=\"tim-icons icon-single-02\" />\r\n                              </div>\r\n                              <h4 className=\"info-title\">Community</h4>\r\n                              <hr className=\"line-success\" />\r\n                              <p>\r\n                                you can share your knowledge with others usung the comment section in the news forum and\r\n                                get to know each other.\r\n                              </p>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n              </section>\r\n          </section>\r\n\r\n\r\n          <div className=\"section section-examples\" data-background-color=\"black\">\r\n            <img\r\n              alt=\"...\"\r\n              className=\"path\"\r\n              src={require(\"assets/img/path1.png\").default}\r\n            />\r\n            <div className=\"space-50\" />\r\n              <Container className=\"text-center\">\r\n                <Row>\r\n                  <Col sm=\"6\">\r\n                    <Link to=\"reg\">\r\n                      <img\r\n                        alt=\"...\"\r\n                        className=\"img-raised\"\r\n                        src={require(\"assets/img/Landing/signup.jpeg\").default}\r\n                      />\r\n                    </Link>\r\n                    <Button\r\n                      className=\"btn-simple btn-round\"\r\n                      color=\"primary\"\r\n                      to=\"reg\"\r\n                      tag={Link}\r\n                    >\r\n                      View Signup Page\r\n                    </Button>\r\n                  </Col>\r\n                  <Col sm=\"6\">\r\n                    <Link to=\"login\">\r\n                      <img\r\n                        alt=\"...\"\r\n                        className=\"img-raised\"\r\n                        src={require(\"assets/img/Landing/login.jpeg\").default}\r\n                      />\r\n                    </Link>\r\n                    <Button\r\n                      className=\"btn-simple btn-round\"\r\n                      color=\"primary\"\r\n                      to=\"login\"\r\n                      tag={Link}\r\n                    >\r\n                      View Login Page\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\RegisterPage.js",[],["170","171"],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\AstroObjects\\AstroObject\\index.jsx",["172","173","174"],"import React, { useCallback, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport CardWithImage from \"components/CardWithImage\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { timeDifference } from \"../../../helper/helper\";\r\n\r\nconst AstroObject = ({ match }) => {\r\n  const history = useHistory();\r\n  const userType = useSelector(state => state.users.userType)\r\n  const handleUpdate = useCallback(\r\n    (id) => history.replace(`/astroUpdate/${id}`),\r\n    [history]\r\n  );\r\n\r\n  const { astroObjectId } = match.params;\r\n  const astroObject = useSelector((state) =>\r\n    state.astroObjects.astroObjects.find(\r\n      (astroObject) => astroObject.id === parseInt(astroObjectId)\r\n    )\r\n  );\r\n\r\n  //console.log(htmlToReact(content).innerText);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"section section-lg\">\r\n        <section className=\"section\">\r\n          <Container>\r\n            <Row>\r\n              <h1 className=\"title\">{astroObject.name}</h1>\r\n            </Row>\r\n            <Row>\r\n              <CardWithImage\r\n                image={astroObject.image}\r\n                headingType=\"h2\"\r\n                height=\"520px\"\r\n                cardTitle=\"\"\r\n                cardText=\"\"\r\n                lastUpdatedText={timeDifference(astroObject.timestamp)}\r\n                isInList={false}\r\n              />\r\n            </Row>\r\n\r\n            <div style={({ backgroundColor: \"white\" }, { color: \"white\" })}>\r\n              {htmlToReact(astroObject.description)}\r\n            </div>\r\n            {userType === \"admin\" ? <div className=\"my-3 text-right\">\r\n              <Button\r\n                  onClick={() => handleUpdate(astroObject.id)}\r\n                  color=\"info\"\r\n              >\r\n                Update\r\n              </Button>\r\n            </div> : null}\r\n            <div className=\"mt-5\">\r\n              <h3>{` ${2} Comments`}</h3>\r\n              <form>\r\n                <FormGroup>\r\n                  <Label style={{ color: \"white\" }} for=\"userComment\">\r\n                    User Name\r\n                  </Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"text\"\r\n                    id=\"userComment\"\r\n                    placeholder=\"Add a public comment...\"\r\n                  />\r\n                </FormGroup>\r\n                <div className=\"text-right\">\r\n                  <Button color=\"secondary\">Cancel</Button>\r\n                  <Button color=\"primary\" type=\"submit\">\r\n                    Comment\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n              <div>\r\n                <Row className=\"mt-3\">\r\n                  <strong style={{ color: \"white\" }}>User name 1</strong>\r\n                  <div className=\"ml-2\">1 month ago</div>\r\n                </Row>\r\n                <Row>\r\n                  <p className=\"mt-2 ml-4\">\r\n                    The HTML element defines text with strong importance. The\r\n                    content inside is typically displayed in bold.\r\n                  </p>\r\n                </Row>\r\n                <Row className=\"mt-3\">\r\n                  <strong style={{ color: \"white\" }}>User name 2</strong>\r\n                  <div className=\"ml-2\">1 month ago</div>\r\n                </Row>\r\n                <Row>\r\n                  <p className=\"mt-2 ml-4\">\r\n                    The HTML element defines text with strong importance. The\r\n                    content inside is typically displayed in bold.\r\n                  </p>\r\n                </Row>\r\n              </div>\r\n            </div>\r\n          </Container>\r\n        </section>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AstroObject;\r\n\r\nfunction htmlToReact(html) {\r\n  //var ReactDOMServer = require(\"react-dom/server\");\r\n  var HtmlToReactParser = require(\"html-to-react\").Parser;\r\n  var htmlInput = html;\r\n  var htmlToReactParser = new HtmlToReactParser();\r\n  var reactElement = htmlToReactParser.parse(htmlInput);\r\n  //var reactHtml = ReactDOMServer.renderToStaticMarkup(reactElement);\r\n  //console.log(reactHtml);\r\n  return reactElement;\r\n}\r\n","C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\examples\\LoginPage.js",["175"],"import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport{\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardImg,\r\n    CardTitle,\r\n    Form,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Input,\r\n    \r\n\r\n}from \"reactstrap\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { loginThunkFunction } from \"../../redux/slices/authSlice\";\r\n\r\n\r\nexport default function LoginPage(){\r\n    //form focusing states\r\n    const [emailFocus, setEmailFocus] = React.useState(false);\r\n    const [passwordFocus, setPasswordFocus] = React.useState(false);\r\n    //status for validation purposes\r\n    const[stateInput,setStateInput]=React.useState({input: {}});\r\n    const[stateError,setStateError]=React.useState({error: {}});\r\n    //mouse following square states  \r\n    const [squares1to6, setSquares1to6] = React.useState(\"\");\r\n    const [squares7and8, setSquares7and8] = React.useState(\"\");\r\n    \r\n\r\n    //for authendication purposes\r\n    const dispatch = useDispatch();\r\n    const submitHandler = (username,password) => {\r\n        \r\n        dispatch(loginThunkFunction(username, password))\r\n    }\r\n\r\n    //functions for validation\r\n    const handleChange = (event)=>{\r\n        let input = stateInput.input;\r\n        input[event.target.name] =event.target.value;\r\n\r\n        setStateInput({\r\n            input: input\r\n        });\r\n    };\r\n\r\n    const handleSubmit =(event)=> {\r\n        event.preventDefault();\r\n        if(validate()){\r\n            \r\n            let input = {};\r\n            let Email= stateInput.input.Email;\r\n            let Password=stateInput.input.Password;\r\n            input[\"Email\"]=\"\";\r\n            input[\"Password\"]=\"\";\r\n\r\n            setStateInput({\r\n                input: input\r\n            });\r\n            \r\n            submitHandler(Email,Password);\r\n        }\r\n    };\r\n\r\n    const validate = () =>{\r\n        let input=stateInput.input;\r\n        let error ={};\r\n        let isValid = true;\r\n\r\n        if (!input[\"Email\"]){\r\n            isValid = false;\r\n            error[\"Email\"] =\"Please enter your email\";\r\n        }\r\n\r\n        if (!input[\"Password\"]){\r\n            isValid = false;\r\n            error[\"Password\"]=\"Please enter your password\";\r\n        }\r\n\r\n        if (typeof input[\"Email\"] !== \"undefined\") {\r\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n            if (!pattern.test(input[\"Email\"])) {\r\n                isValid = false;\r\n                error[\"Email\"] = \"Please enter valid email address.\";\r\n            }\r\n        }\r\n\r\n        setStateError({\r\n\r\n            error: error\r\n\r\n        });\r\n        return isValid;\r\n    }\r\n\r\n    //mouse following square effects on the page\r\n    React.useEffect(() => {\r\n        document.body.classList.toggle(\"register-page\");\r\n        document.documentElement.addEventListener(\"mousemove\", followCursor);\r\n        // Specify how to clean up after this effect:\r\n        return function cleanup() {\r\n        document.body.classList.toggle(\"register-page\");\r\n        document.documentElement.removeEventListener(\"mousemove\", followCursor);\r\n        };\r\n    },[]);\r\n\r\n    const followCursor = (event) => {\r\n        let posX = event.clientX - window.innerWidth / 2;\r\n        let posY = event.clientY - window.innerWidth / 6;\r\n        setSquares1to6(\r\n        \"perspective(500px) rotateY(\" +\r\n            posX * 0.05 +\r\n            \"deg) rotateX(\" +\r\n            posY * -0.05 +\r\n            \"deg)\"\r\n        );\r\n        setSquares7and8(\r\n        \"perspective(500px) rotateY(\" +\r\n            posX * 0.02 +\r\n            \"deg) rotateX(\" +\r\n            posY * -0.02 +\r\n            \"deg)\"\r\n        );\r\n    };\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <div className=\"wrapper\">\r\n            <div className=\"page-header\">\r\n                <div className=\"page-header-image\" />\r\n                <div className=\"content\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"offset-lg-0 offset-md-3\" lg=\"5\" md=\"6\">\r\n                               <Card className=\"card-register\">\r\n                                    <CardHeader>\r\n                                       <CardImg\r\n                                            alt=\"...\"\r\n                                            src={require(\"assets/img/square-purple-1.png\").default}\r\n                                        />\r\n                                        <CardTitle tag=\"h4\">Log IN</CardTitle>\r\n                                    </CardHeader>\r\n                                    <br/>\r\n                                    <CardBody>\r\n                                        <Form className=\"form\" onSubmit={(e)=>handleSubmit(e)}>\r\n                                            <InputGroup\r\n                                                className={classnames({\r\n                                                    \"input-group-focus\": emailFocus,\r\n                                                })}\r\n                                            >\r\n                                                <InputGroupAddon addonType=\"prepend\">\r\n                                                    <InputGroupText>\r\n                                                    <i className=\"tim-icons icon-single-02\" />\r\n                                                    </InputGroupText>\r\n                                                </InputGroupAddon>\r\n                                                <Input\r\n                                                    placeholder=\"Enter Email\"\r\n                                                    type=\"text\"\r\n                                                    name=\"Email\"\r\n                                                    value={stateInput.input.Email}\r\n                                                    onChange={(e) => handleChange(e)}\r\n                                                    onFocus={(e) => setEmailFocus(true)}\r\n                                                    onBlur={(e) => setEmailFocus(false)}\r\n                                                />\r\n                                            </InputGroup>\r\n                                                <div>{stateError.error.Email}</div>\r\n                                            <br/>\r\n                                            <InputGroup\r\n                                                className={classnames({\r\n                                                    \"input-group-focus\": passwordFocus,\r\n                                                })}\r\n                                            >\r\n                                                <InputGroupAddon addonType=\"prepend\">\r\n                                                    <InputGroupText>\r\n                                                    <i className=\"tim-icons icon-single-02\" />\r\n                                                    </InputGroupText>\r\n                                                </InputGroupAddon>\r\n                                                <Input\r\n                                                    placeholder=\"Enter Password\"\r\n                                                    type=\"password\"\r\n                                                    name=\"Password\"\r\n                                                    value={stateInput.input.Password}\r\n                                                    onChange={(e) => handleChange(e)}\r\n                                                    onFocus={(e) => setPasswordFocus(true)}\r\n                                                    onBlur={(e) => setPasswordFocus(false)}\r\n                                                />\r\n                                            </InputGroup>\r\n                                                <div>{stateError.error.Password}</div>\r\n                                            <br/>\r\n                                            <Button className=\"btn-round\" color=\"success\" size=\"lg\">Log In</Button>\r\n                                        </Form>\r\n                                    </CardBody>\r\n                               </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <div className=\"register-bg\" \r\n                        />\r\n                            <div\r\n                                className=\"square square-1\"\r\n                                id=\"square1\"\r\n                                style={{ transform: squares1to6 }}\r\n                                \r\n                            />\r\n                            <div\r\n                                className=\"square square-2\"\r\n                                id=\"square2\"\r\n                                style={{ transform: squares1to6 }}\r\n                                \r\n                            />\r\n                            \r\n                            <div\r\n                                className=\"square square-3\"\r\n                                id=\"square3\"\r\n                                style={{ transform: squares1to6 }}\r\n                                \r\n                            />\r\n                            <div\r\n                                className=\"square square-4\"\r\n                                id=\"square4\"\r\n                                style={{ transform: squares1to6 }}\r\n                                \r\n                            />\r\n                            <div\r\n                                className=\"square square-5\"\r\n                                id=\"square5\"\r\n                                style={{ transform: squares1to6 }}\r\n                                \r\n                            />\r\n                            <div\r\n                                className=\"square square-6\"\r\n                                id=\"square6\"\r\n                                style={{ transform: squares1to6 }}\r\n                                \r\n                            />\r\n                    </Container> \r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n","C:\\code\\SE-Project-Astro\\frontend-app\\src\\variables\\charts.js",[],["176","177"],"C:\\code\\SE-Project-Astro\\frontend-app\\src\\views\\AddNews\\AddNews.jsx",["178","179","180","181"],{"ruleId":"182","severity":1,"message":"183","line":18,"column":10,"nodeType":"184","messageId":"185","endLine":18,"endColumn":22},{"ruleId":"186","severity":1,"message":"187","line":33,"column":6,"nodeType":"188","endLine":33,"endColumn":8,"suggestions":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"182","severity":1,"message":"194","line":2,"column":15,"nodeType":"184","messageId":"185","endLine":2,"endColumn":23},{"ruleId":"182","severity":1,"message":"195","line":8,"column":5,"nodeType":"184","messageId":"185","endLine":8,"endColumn":19},{"ruleId":"182","severity":1,"message":"196","line":9,"column":5,"nodeType":"184","messageId":"185","endLine":9,"endColumn":17},{"ruleId":"182","severity":1,"message":"197","line":10,"column":5,"nodeType":"184","messageId":"185","endLine":10,"endColumn":17},{"ruleId":"182","severity":1,"message":"198","line":11,"column":5,"nodeType":"184","messageId":"185","endLine":11,"endColumn":25},{"ruleId":"182","severity":1,"message":"199","line":20,"column":5,"nodeType":"184","messageId":"185","endLine":20,"endColumn":24},{"ruleId":"182","severity":1,"message":"200","line":13,"column":3,"nodeType":"184","messageId":"185","endLine":13,"endColumn":8},{"ruleId":"182","severity":1,"message":"201","line":14,"column":3,"nodeType":"184","messageId":"185","endLine":14,"endColumn":12},{"ruleId":"182","severity":1,"message":"202","line":26,"column":8,"nodeType":"184","messageId":"185","endLine":26,"endColumn":17},{"ruleId":"182","severity":1,"message":"203","line":27,"column":8,"nodeType":"184","messageId":"185","endLine":27,"endColumn":14},{"ruleId":"182","severity":1,"message":"204","line":35,"column":10,"nodeType":"184","messageId":"185","endLine":35,"endColumn":22},{"ruleId":"190","replacedBy":"205"},{"ruleId":"192","replacedBy":"206"},{"ruleId":"190","replacedBy":"207"},{"ruleId":"192","replacedBy":"208"},{"ruleId":"182","severity":1,"message":"209","line":4,"column":9,"nodeType":"184","messageId":"185","endLine":4,"endColumn":26},{"ruleId":"182","severity":1,"message":"210","line":24,"column":19,"nodeType":"184","messageId":"185","endLine":24,"endColumn":24},{"ruleId":"182","severity":1,"message":"211","line":2,"column":9,"nodeType":"184","messageId":"185","endLine":2,"endColumn":12},{"ruleId":"182","severity":1,"message":"212","line":2,"column":36,"nodeType":"184","messageId":"185","endLine":2,"endColumn":43},{"ruleId":"190","replacedBy":"213"},{"ruleId":"192","replacedBy":"214"},{"ruleId":"182","severity":1,"message":"215","line":19,"column":3,"nodeType":"184","messageId":"185","endLine":19,"endColumn":12},{"ruleId":"182","severity":1,"message":"199","line":22,"column":3,"nodeType":"184","messageId":"185","endLine":22,"endColumn":22},{"ruleId":"182","severity":1,"message":"216","line":23,"column":3,"nodeType":"184","messageId":"185","endLine":23,"endColumn":23},{"ruleId":"182","severity":1,"message":"217","line":30,"column":12,"nodeType":"184","messageId":"185","endLine":30,"endColumn":23},{"ruleId":"182","severity":1,"message":"218","line":42,"column":11,"nodeType":"184","messageId":"185","endLine":42,"endColumn":23},{"ruleId":"182","severity":1,"message":"219","line":1,"column":40,"nodeType":"184","messageId":"185","endLine":1,"endColumn":48},{"ruleId":"182","severity":1,"message":"220","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":19},{"ruleId":"182","severity":1,"message":"221","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":19},{"ruleId":"182","severity":1,"message":"222","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":21},{"ruleId":"182","severity":1,"message":"223","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":25},{"ruleId":"182","severity":1,"message":"224","line":14,"column":9,"nodeType":"184","messageId":"185","endLine":14,"endColumn":22},{"ruleId":"186","severity":1,"message":"225","line":31,"column":8,"nodeType":"188","endLine":31,"endColumn":28,"suggestions":"226"},{"ruleId":"182","severity":1,"message":"227","line":1,"column":9,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"228","line":4,"column":9,"nodeType":"184","messageId":"185","endLine":4,"endColumn":20},{"ruleId":"182","severity":1,"message":"210","line":24,"column":24,"nodeType":"184","messageId":"185","endLine":24,"endColumn":29},{"ruleId":"182","severity":1,"message":"229","line":58,"column":7,"nodeType":"184","messageId":"185","endLine":58,"endColumn":27},{"ruleId":"182","severity":1,"message":"230","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"231","line":2,"column":15,"nodeType":"184","messageId":"185","endLine":2,"endColumn":26},{"ruleId":"186","severity":1,"message":"232","line":31,"column":6,"nodeType":"188","endLine":31,"endColumn":8,"suggestions":"233"},{"ruleId":"186","severity":1,"message":"234","line":37,"column":6,"nodeType":"188","endLine":37,"endColumn":8,"suggestions":"235"},{"ruleId":"182","severity":1,"message":"211","line":5,"column":3,"nodeType":"184","messageId":"185","endLine":5,"endColumn":6},{"ruleId":"182","severity":1,"message":"236","line":18,"column":9,"nodeType":"184","messageId":"185","endLine":18,"endColumn":21},{"ruleId":"237","severity":1,"message":"238","line":97,"column":17,"nodeType":"239","endLine":97,"endColumn":118},{"ruleId":"237","severity":1,"message":"238","line":109,"column":17,"nodeType":"239","endLine":109,"endColumn":119},{"ruleId":"237","severity":1,"message":"238","line":121,"column":17,"nodeType":"239","endLine":121,"endColumn":120},{"ruleId":"182","severity":1,"message":"203","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":14},{"ruleId":"182","severity":1,"message":"240","line":9,"column":8,"nodeType":"184","messageId":"185","endLine":9,"endColumn":13},{"ruleId":"182","severity":1,"message":"241","line":13,"column":3,"nodeType":"184","messageId":"185","endLine":13,"endColumn":7},{"ruleId":"182","severity":1,"message":"242","line":14,"column":3,"nodeType":"184","messageId":"185","endLine":14,"endColumn":13},{"ruleId":"182","severity":1,"message":"243","line":15,"column":3,"nodeType":"184","messageId":"185","endLine":15,"endColumn":11},{"ruleId":"182","severity":1,"message":"244","line":16,"column":3,"nodeType":"184","messageId":"185","endLine":16,"endColumn":13},{"ruleId":"182","severity":1,"message":"245","line":17,"column":3,"nodeType":"184","messageId":"185","endLine":17,"endColumn":12},{"ruleId":"182","severity":1,"message":"246","line":18,"column":3,"nodeType":"184","messageId":"185","endLine":18,"endColumn":16},{"ruleId":"182","severity":1,"message":"247","line":19,"column":3,"nodeType":"184","messageId":"185","endLine":19,"endColumn":12},{"ruleId":"190","replacedBy":"248"},{"ruleId":"192","replacedBy":"249"},{"ruleId":"182","severity":1,"message":"250","line":1,"column":30,"nodeType":"184","messageId":"185","endLine":1,"endColumn":39},{"ruleId":"182","severity":1,"message":"211","line":5,"column":3,"nodeType":"184","messageId":"185","endLine":5,"endColumn":6},{"ruleId":"182","severity":1,"message":"251","line":13,"column":9,"nodeType":"184","messageId":"185","endLine":13,"endColumn":20},{"ruleId":"182","severity":1,"message":"204","line":34,"column":12,"nodeType":"184","messageId":"185","endLine":34,"endColumn":24},{"ruleId":"190","replacedBy":"252"},{"ruleId":"192","replacedBy":"253"},{"ruleId":"182","severity":1,"message":"230","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"231","line":2,"column":15,"nodeType":"184","messageId":"185","endLine":2,"endColumn":26},{"ruleId":"186","severity":1,"message":"254","line":27,"column":6,"nodeType":"188","endLine":27,"endColumn":8,"suggestions":"255"},{"ruleId":"186","severity":1,"message":"256","line":33,"column":6,"nodeType":"188","endLine":33,"endColumn":8,"suggestions":"257"},"no-unused-vars","'setAuthToken' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["258"],"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"'Redirect' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'Label' is defined but never used.","'FormGroup' is defined but never used.","'RegNavbar' is defined but never used.","'Footer' is defined but never used.","'squares7and8' is assigned a value but never used.",["259"],["260"],["259"],["260"],"'fetchAstroObjects' is defined but never used.","'image' is assigned a value but never used.","'Col' is defined but never used.","'CardImg' is defined but never used.",["259"],["260"],"'Container' is defined but never used.","'UncontrolledCarousel' is defined but never used.","'stateChange' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'useState' is defined but never used.","'nasa_news_1' is defined but never used.","'nasa_news_2' is defined but never used.","'spacex_news_1' is defined but never used.","'blueorigin_news_1' is defined but never used.","'selectAllNews' is defined but never used.","React Hook useEffect has a missing dependency: 'status'. Either include it or remove the dependency array.",["261"],"'createAsyncThunk' is defined but never used.","'useSelector' is defined but never used.","'fetchAstroObjectById' is assigned a value but never used.","'Component' is defined but never used.","'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'astroObject'. Either include it or remove the dependency array.",["262"],"React Hook useEffect has a missing dependency: 'astroObjectId'. Either include it or remove the dependency array.",["263"],"'handleUpdate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Cards' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'CardFooter' is defined but never used.","'CardTitle' is defined but never used.","'ListGroupItem' is defined but never used.","'ListGroup' is defined but never used.",["259"],["260"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.",["259"],["260"],"React Hook useEffect has a missing dependency: 'news'. Either include it or remove the dependency array.",["264"],"React Hook useEffect has a missing dependency: 'newsId'. Either include it or remove the dependency array.",["265"],{"desc":"266","fix":"267"},"no-global-assign","no-unsafe-negation",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},"Update the dependencies array to be: [dispatch]",{"range":"278","text":"279"},"Update the dependencies array to be: [newsList, dispatch, status]",{"range":"280","text":"281"},"Update the dependencies array to be: [astroObject]",{"range":"282","text":"283"},"Update the dependencies array to be: [astroObjectId]",{"range":"284","text":"285"},"Update the dependencies array to be: [news]",{"range":"286","text":"287"},"Update the dependencies array to be: [newsId]",{"range":"288","text":"289"},[1564,1566],"[dispatch]",[1222,1242],"[newsList, dispatch, status]",[1187,1189],"[astroObject]",[1280,1282],"[astroObjectId]",[1035,1037],"[news]",[1122,1124],"[newsId]"]