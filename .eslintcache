[{"E:\\frontend\\frontend-app\\src\\index.js":"1","E:\\frontend\\frontend-app\\src\\views\\examples\\LandingPage.js":"2","E:\\frontend\\frontend-app\\src\\views\\App.jsx":"3","E:\\frontend\\frontend-app\\src\\components\\Footer\\Footer.js":"4","E:\\frontend\\frontend-app\\src\\views\\AddNewAstroObj\\AddNewAstroObj.jsx":"5","E:\\frontend\\frontend-app\\src\\views\\examples\\NewLandingPage.js":"6","E:\\frontend\\frontend-app\\src\\views\\NewsPage\\index.jsx":"7","E:\\frontend\\frontend-app\\src\\views\\AstroObjects\\AstroObject\\index.jsx":"8","E:\\frontend\\frontend-app\\src\\components\\Navbars\\NormalNavbar.js":"9","E:\\frontend\\frontend-app\\src\\components\\CardWithImage\\index.jsx":"10","E:\\frontend\\frontend-app\\src\\views\\examples\\LoginPage.js":"11","E:\\frontend\\frontend-app\\src\\views\\LuanrCalenadr\\LunarCalendar.jsx":"12","E:\\frontend\\frontend-app\\src\\Layout\\Layout.jsx":"13","E:\\frontend\\frontend-app\\src\\components\\TextEditor\\TextEditor.js":"14","E:\\frontend\\frontend-app\\src\\components\\Navbars\\RegNavbar.js":"15","E:\\frontend\\frontend-app\\src\\views\\examples\\NewRegisterPage.js":"16"},{"size":1924,"mtime":1611423022609,"results":"17","hashOfConfig":"18"},{"size":23431,"mtime":1611422396308,"results":"19","hashOfConfig":"18"},{"size":3129,"mtime":1611431048220,"results":"20","hashOfConfig":"18"},{"size":4480,"mtime":1611423022606,"results":"21","hashOfConfig":"18"},{"size":5318,"mtime":1611423022611,"results":"22","hashOfConfig":"18"},{"size":7908,"mtime":1611423022616,"results":"23","hashOfConfig":"18"},{"size":3383,"mtime":1611423022615,"results":"24","hashOfConfig":"18"},{"size":6675,"mtime":1611423022613,"results":"25","hashOfConfig":"18"},{"size":7123,"mtime":1611431363860,"results":"26","hashOfConfig":"18"},{"size":2046,"mtime":1611423022593,"results":"27","hashOfConfig":"18"},{"size":10356,"mtime":1611434995363,"results":"28","hashOfConfig":"18"},{"size":11370,"mtime":1611423022614,"results":"29","hashOfConfig":"18"},{"size":752,"mtime":1611423022569,"results":"30","hashOfConfig":"18"},{"size":387,"mtime":1611423022608,"results":"31","hashOfConfig":"18"},{"size":3440,"mtime":1611423022607,"results":"32","hashOfConfig":"18"},{"size":11589,"mtime":1611438469030,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1gqvgci",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"E:\\frontend\\frontend-app\\src\\index.js",["72","73","74","75","76","77","78"],"E:\\frontend\\frontend-app\\src\\views\\examples\\LandingPage.js",[],"E:\\frontend\\frontend-app\\src\\views\\App.jsx",["79","80"],"E:\\frontend\\frontend-app\\src\\components\\Footer\\Footer.js",["81","82","83"],"E:\\frontend\\frontend-app\\src\\views\\AddNewAstroObj\\AddNewAstroObj.jsx",["84","85","86","87","88"],"import React, { Component, useCallback, useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextEditor from \"../../components/TextEditor/TextEditor\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// reactstrap components\r\nimport { FormGroup, Label, Input, Button, Container } from \"reactstrap\";\r\n\r\nconst configJoditEditor = {\r\n  theme: \"dark\",\r\n  readonly: false, // all options from https://xdsoft.net/jodit/doc/\r\n};\r\nclass AddNewAstroObj extends Component {\r\n  state = {\r\n    //images: [],\r\n    imageUrl: \"\",\r\n    objName: \"\",\r\n    content: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n  }\r\n\r\n  handleTextAreaChange = (newtextAreaValue) => {\r\n    const content = newtextAreaValue;\r\n    console.log(content);\r\n    this.setState({ content });\r\n  };\r\n  handleObjNameChange = (e) => {\r\n    const objName = e.target.value;\r\n    this.setState({ objName });\r\n  };\r\n  handleSubmit = () => {\r\n    console.log(\"content \", this.state.content);\r\n\r\n    //const history = useHistory();\r\n    //useCallback((id) => history.replace(\"/astro\"), [history]);\r\n  };\r\n\r\n  /*handleAddImageUrl = () => {\r\n    const images = [...this.state.images, this.state.imageUrl];\r\n    const imageUrl = \"\";\r\n    this.setState({ images });\r\n    this.setState({ imageUrl });\r\n    //console.log(images);\r\n  };*/\r\n\r\n  handleImageUrlChange = (e) => {\r\n    const imageUrl = e.target.value;\r\n    this.setState({ imageUrl });\r\n  };\r\n  handleDeleteImage = (e) => {\r\n    var images = [...this.state.images]; // make a separate copy of the array\r\n    var index = images.indexOf(e);\r\n    if (index !== -1) {\r\n      images.splice(index, 1);\r\n      this.setState({ images });\r\n    }\r\n  };\r\n\r\n  isValidForm = () => {\r\n    if (\r\n      typeof this.state.objName === \"string\" &&\r\n      this.state.objName !== \"\" &&\r\n      typeof this.state.content === \"string\" &&\r\n      this.state.content !== \"\" &&\r\n      this.isImageUrl(this.state.imageUrl)\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  isImageUrl() {\r\n    const url = this.state.imageUrl;\r\n    var pattern = new RegExp(\r\n      \"^(https?:\\\\/\\\\/)?\" + // protocol\r\n        \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\r\n        \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\r\n        \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\r\n        \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\r\n        \"(\\\\#[-a-z\\\\d_]*)?$\",\r\n      \"i\"\r\n    ); // fragment locator\r\n    return !!pattern.test(url) && url.match(/\\.(jpeg|jpg|gif|png)$/) != null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"section section-examples\" data-background-color=\"black\">\r\n        <div className=\"space-50\" />\r\n        <Container className=\"\">\r\n          <form>\r\n            <FormGroup>\r\n              <Label for=\"objName\">Object Name</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"objName\"\r\n                id=\"objName\"\r\n                placeholder=\"Enter Object Name\"\r\n                onChange={this.handleObjNameChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"images\">Images</Label>\r\n\r\n              <Input\r\n                id=\"images\"\r\n                type=\"url\"\r\n                name=\"images\"\r\n                value={this.state.imageUrl}\r\n                placeholder=\"Enter image url\"\r\n                onChange={this.handleImageUrlChange}\r\n              />\r\n              {/* <Button\r\n                onClick={this.handleAddImageUrl}\r\n                className=\"btn-round btn-icon mb-2\"\r\n                color=\"primary\"\r\n                disabled={!this.isImageUrl()}\r\n              >\r\n                <i className=\"tim-icons icon-simple-add\" />\r\n              </Button> */}\r\n            </FormGroup>\r\n            {/* <Row>\r\n              {this.state.images.map((img) => (\r\n                <Col key={img} sm=\"3\">\r\n                  <img alt=\"...\" className=\"img-raised\" src={img} />\r\n                  <Button\r\n                    className=\"btn-round btn-icon\"\r\n                    size=\"sm\"\r\n                    color=\"primary\"\r\n                    onClick={() => this.handleDeleteImage(img)}\r\n                  >\r\n                    <i className=\"tim-icons icon-simple-remove\" />\r\n                  </Button>\r\n                </Col>\r\n              ))}\r\n            </Row> */}\r\n            <FormGroup>\r\n              <Label>Description</Label>\r\n              <TextEditor\r\n                value={this.state.content}\r\n                onChange={this.handleTextAreaChange}\r\n              />\r\n              {/* <JoditEditor\r\n                className=\"text-dark bg-dark\"\r\n                ref={this.state.editor}\r\n                config={configJoditEditor}\r\n                value={this.state.content}\r\n                tabIndex={2} // tabIndex of textarea\r\n                onChange={this.handleTextAreaChange}\r\n              /> */}\r\n            </FormGroup>\r\n            <Button\r\n              tag={Link}\r\n              to=\"/lunarCalendar\"\r\n              onClick={this.handleSubmit}\r\n              color=\"primary\"\r\n              disabled={!this.isValidForm()}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewAstroObj;\r\n",["89","90"],"E:\\frontend\\frontend-app\\src\\views\\examples\\NewLandingPage.js",["91","92","93","94","95","96","97","98","99"],"E:\\frontend\\frontend-app\\src\\views\\NewsPage\\index.jsx",[],"E:\\frontend\\frontend-app\\src\\views\\AstroObjects\\AstroObject\\index.jsx",["100"],"import React, { useCallback } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport CardWithImage from \"components/CardWithImage\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AstroObject = ({ match }) => {\r\n  const history = useHistory();\r\n  const handleUpdate = useCallback(\r\n    (id) => history.replace(`/astroUpdate/${id}`),\r\n    [history]\r\n  );\r\n\r\n  const { astroObjectId } = match.params;\r\n\r\n  const content = `<p><span>A planet is an astronomical body orbiting a star or stellar remnant that is massive enough to be rounded by its own gravity, is not massive enough to cause thermonuclear fusion, and – according to the International Astronomical Union but not all planetary scientists – has cleared its neighbouring region of planetesimals.[b][1][2]<br>\r\n\r\n        The term planet is ancient, with ties to history, astrology, science, mythology, and religion. Apart from Earth itself, five planets in the Solar System are often visible to the naked eye. These were regarded by many early cultures as divine, or as emissaries of deities. As scientific knowledge advanced, human perception of the planets changed, incorporating a number of disparate objects. In 2006, the International Astronomical Union (IAU) officially adopted a resolution defining planets within the Solar System. This definition is controversial because it excludes many objects of planetary mass based on where or what they orbit. Although eight of the planetary bodies discovered before 1950 remain \"planets\" under the current definition, some celestial bodies, such as Ceres, Pallas, Juno and Vesta (each an object in the solar asteroid belt), and Pluto (the first trans-Neptunian object discovered), that were once considered planets by the scientific community, are no longer viewed as planets under the current definition of planet.<br>\r\n\r\n        The planets were thought by Ptolemy to orbit Earth in deferent and epicycle motions. Although the idea that the planets orbited the Sun had been suggested many times, it was not until the 17th century that this view was supported by evidence from the first telescopic astronomical observations, performed by Galileo Galilei. About the same time, by careful analysis of pre-telescopic observational data collected by Tycho Brahe, Johannes Kepler found the planets' orbits were elliptical rather than circular. As observational tools improved, astronomers saw that, like Earth, each of the planets rotated around an axis tilted with respect to its orbital pole, and some shared such features as ice caps and seasons. Since the dawn of the Space Age, close observation by space probes has found that Earth and the other planets share characteristics such as volcanism, hurricanes, tectonics, and even hydrology.<br>\r\n\r\n        Planets in the Solar System are divided into two main types: large low-density giant planets, and smaller rocky terrestrials. There are eight planets in the Solar System according to the IAU definition.[1] In order of increasing distance from the Sun, they are the four terrestrials, Mercury, Venus, Earth, and Mars, then the four giant planets, Jupiter, Saturn, Uranus, and Neptune. Six of the planets are orbited by one or more natural satellites.</span><br></p>`;\r\n\r\n  const astroObject = useSelector((state) =>\r\n    state.astroObjects.astroObjects.find((astroObject) => astroObject.name === astroObjectId)\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"section section-lg\">\r\n        <section className=\"section\">\r\n          <Container>\r\n            <Row>\r\n              <h1 className=\"title\">{astroObject.description}</h1>\r\n            </Row>\r\n            <Row>\r\n              <CardWithImage\r\n                image={astroObject.image}\r\n                headingType=\"h2\"\r\n                height=\"520px\"\r\n                cardTitle={astroObjectId.description}\r\n                isInList={false}\r\n              />\r\n            </Row>\r\n            <div style={({ backgroundColor: \"white\" }, { color: \"white\" })}>\r\n              {htmlToReact(content)}\r\n            </div>\r\n            <div className=\"my-3 text-right\">\r\n              <Button onClick={() => handleUpdate(astroObject.name)} color=\"info\">\r\n                Update\r\n              </Button>\r\n            </div>\r\n            <div className=\"mt-5\">\r\n              <h3>{` ${2} Comments`}</h3>\r\n              <form>\r\n                <FormGroup>\r\n                  <Label style={{ color: \"white\" }} for=\"userComment\">\r\n                    User Name\r\n                  </Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"text\"\r\n                    id=\"userComment\"\r\n                    placeholder=\"Add a public comment...\"\r\n                  />\r\n                </FormGroup>\r\n                <div className=\"text-right\">\r\n                  <Button color=\"secondary\">Cancel</Button>\r\n                  <Button color=\"primary\" type=\"submit\">\r\n                    Comment\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n              <div>\r\n                <Row className=\"mt-3\">\r\n                  <strong style={{ color: \"white\" }}>User name 1</strong>\r\n                  <div className=\"ml-2\">1 month ago</div>\r\n                </Row>\r\n                <Row>\r\n                  <p className=\"mt-2 ml-4\">\r\n                    The HTML element defines text with strong importance. The\r\n                    content inside is typically displayed in bold.\r\n                  </p>\r\n                </Row>\r\n                <Row className=\"mt-3\">\r\n                  <strong style={{ color: \"white\" }}>User name 2</strong>\r\n                  <div className=\"ml-2\">1 month ago</div>\r\n                </Row>\r\n                <Row>\r\n                  <p className=\"mt-2 ml-4\">\r\n                    The HTML element defines text with strong importance. The\r\n                    content inside is typically displayed in bold.\r\n                  </p>\r\n                </Row>\r\n              </div>\r\n            </div>\r\n          </Container>\r\n        </section>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AstroObject;\r\n\r\nfunction htmlToReact(html) {\r\n  //var ReactDOMServer = require(\"react-dom/server\");\r\n  var HtmlToReactParser = require(\"html-to-react\").Parser;\r\n  var htmlInput = html;\r\n  var htmlToReactParser = new HtmlToReactParser();\r\n  var reactElement = htmlToReactParser.parse(htmlInput);\r\n  //var reactHtml = ReactDOMServer.renderToStaticMarkup(reactElement);\r\n  //console.log(reactHtml);\r\n  return reactElement;\r\n}\r\n","E:\\frontend\\frontend-app\\src\\components\\Navbars\\NormalNavbar.js",["101","102","103","104","105"],"E:\\frontend\\frontend-app\\src\\components\\CardWithImage\\index.jsx",["106","107"],"import React from 'react';\r\nimport {Col, Card, CardImgOverlay, CardImg, CardText, CardTitle} from \"reactstrap\";\r\nimport {createUseStyles} from 'react-jss'\r\n\r\nconst useStyles = createUseStyles({\r\n    customCard: {\r\n        borderRadius: \"16px\",\r\n        transition: 'all 0.2s ease',\r\n        height: props => props.height,\r\n        backgroundImage: props => `url(${props.image})`,\r\n        backgroundSize: \"cover\",\r\n        '&:hover': {\r\n            transform: props => props.isInList ? 'scale(1.05)' : 'scale(1)',\r\n            transition: 'all 0.2s ease',\r\n        }\r\n    },\r\n    cardImgOverlay: {\r\n        backgroundColor: props => props.isInList ? [[\"rgba(0,0,0,0.6)\", \"!important\"]] : [],\r\n        borderRadius: \"16px\",\r\n        '&:hover': {\r\n            backdropFilter: props => props.isInList ? 'blur(5px)' : 'blur(0)',\r\n            transition: 'all 0.2s ease',\r\n        }\r\n    },\r\n    cardImg: {\r\n        backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n        borderRadius: '16px'\r\n    },\r\n    cardTitle: {\r\n        fontFamily: \"Nunito, sans-serif\",\r\n        fontWeight: 'bold',\r\n    }\r\n})\r\n\r\nconst CardWithImage = (props) => {\r\n    const classes = useStyles(props);\r\n    return (\r\n        <Card inverse className={classes.customCard}>\r\n            <CardImgOverlay className={classes.cardImgOverlay}>\r\n                <CardTitle tag={props.headingType} className={classes.cardTitle}>{props.cardTitle}</CardTitle>\r\n                <CardText style={{fontFamily: \"Nunito, sans-serif\"}}>{props.cardText}</CardText>\r\n                <CardText>\r\n                    <small className=\"text-muted\">{props.lastUpdatedText}</small>\r\n                </CardText>\r\n            </CardImgOverlay>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CardWithImage;\r\n\r\nCardWithImage.defaultProps = {\r\n    headingType: \"h4\",\r\n    height: \"260px\",\r\n    cardText: \"This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\",\r\n    lastUpdatedText: \"Last updated 3 mins ago\",\r\n    isInList: true\r\n}","E:\\frontend\\frontend-app\\src\\views\\examples\\LoginPage.js",["108"],"import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport{\r\n    Button,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    CardImg,\r\n    CardTitle,\r\n    Form,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Input,\r\n    \r\n\r\n}from \"reactstrap\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { loginThunkFunction } from \"../../redux/slices/authSlice\";\r\n\r\n\r\nexport default function LoginPage(){\r\n    //form focusing states\r\n    const [emailFocus, setEmailFocus] = React.useState(false);\r\n    const [passwordFocus, setPasswordFocus] = React.useState(false);\r\n    //status for validation purposes\r\n    const[stateInput,setStateInput]=React.useState({input: {}});\r\n    const[stateError,setStateError]=React.useState({error: {}});\r\n    //mouse following square states  \r\n    const [squares1to6, setSquares1to6] = React.useState(\"\");\r\n    const [squares7and8, setSquares7and8] = React.useState(\"\");\r\n    \r\n\r\n    //for authendication purposes\r\n    const dispatch = useDispatch();\r\n    const submitHandler = (username,password) => {\r\n        \r\n        dispatch(loginThunkFunction(username, password))\r\n    }\r\n\r\n    //functions for validation\r\n    const handleChange = (event)=>{\r\n        let input = stateInput.input;\r\n        input[event.target.name] =event.target.value;\r\n\r\n        setStateInput({\r\n            input: input\r\n        });\r\n    };\r\n\r\n    const handleSubmit =(event)=> {\r\n        event.preventDefault();\r\n        if(validate()){\r\n            \r\n            let input = {};\r\n            let Email= stateInput.input.Email;\r\n            let Password=stateInput.input.Password;\r\n            input[\"Email\"]=\"\";\r\n            input[\"Password\"]=\"\";\r\n\r\n            setStateInput({\r\n                input: input\r\n            });\r\n            \r\n            submitHandler(Email,Password);\r\n        }\r\n    };\r\n\r\n    const validate = () =>{\r\n        let input=stateInput.input;\r\n        let error ={};\r\n        let isValid = true;\r\n\r\n        if (!input[\"Email\"]){\r\n            isValid = false;\r\n            error[\"Email\"] =\"Please enter your email\";\r\n        }\r\n\r\n        if (!input[\"Password\"]){\r\n            isValid = false;\r\n            error[\"Password\"]=\"Please enter your password\";\r\n        }\r\n\r\n        if (typeof input[\"Email\"] !== \"undefined\") {\r\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n            if (!pattern.test(input[\"Email\"])) {\r\n                isValid = false;\r\n                error[\"Email\"] = \"Please enter valid email address.\";\r\n            }\r\n        }\r\n\r\n        setStateError({\r\n\r\n            error: error\r\n\r\n        });\r\n        return isValid;\r\n    }\r\n\r\n    //mouse following square effects on the page\r\n    React.useEffect(() => {\r\n        document.body.classList.toggle(\"register-page\");\r\n        document.documentElement.addEventListener(\"mousemove\", followCursor);\r\n        // Specify how to clean up after this effect:\r\n        return function cleanup() {\r\n        document.body.classList.toggle(\"register-page\");\r\n        document.documentElement.removeEventListener(\"mousemove\", followCursor);\r\n        };\r\n    },[]);\r\n\r\n    const followCursor = (event) => {\r\n        let posX = event.clientX - window.innerWidth / 2;\r\n        let posY = event.clientY - window.innerWidth / 6;\r\n        setSquares1to6(\r\n        \"perspective(500px) rotateY(\" +\r\n            posX * 0.05 +\r\n            \"deg) rotateX(\" +\r\n            posY * -0.05 +\r\n            \"deg)\"\r\n        );\r\n        setSquares7and8(\r\n        \"perspective(500px) rotateY(\" +\r\n            posX * 0.02 +\r\n            \"deg) rotateX(\" +\r\n            posY * -0.02 +\r\n            \"deg)\"\r\n        );\r\n    };\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <div className=\"wrapper\">\r\n            <div className=\"page-header\">\r\n                <div className=\"page-header-image\" />\r\n                <div className=\"content\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"offset-lg-0 offset-md-3\" lg=\"5\" md=\"6\">\r\n                               <Card className=\"card-register\">\r\n                                    <CardHeader>\r\n                                       <CardImg\r\n                                            alt=\"...\"\r\n                                            src={require(\"assets/img/square-purple-1.png\").default}\r\n                                        />\r\n                                        <CardTitle tag=\"h4\">Log IN</CardTitle>\r\n                                    </CardHeader>\r\n                                    <br/>\r\n                                    <CardBody>\r\n                                        <Form className=\"form\" onSubmit={(e)=>handleSubmit(e)}>\r\n                                            <InputGroup\r\n                                                className={classnames({\r\n                                                    \"input-group-focus\": emailFocus,\r\n                                                })}\r\n                                            >\r\n                                                <InputGroupAddon addonType=\"prepend\">\r\n                                                    <InputGroupText>\r\n                                                    <i className=\"tim-icons icon-single-02\" />\r\n                                                    </InputGroupText>\r\n                                                </InputGroupAddon>\r\n                                                <Input\r\n                                                    placeholder=\"Enter Email\"\r\n                                                    type=\"text\"\r\n                                                    name=\"Email\"\r\n                                                    value={stateInput.input.Email}\r\n                                                    onChange={(e) => handleChange(e)}\r\n                                                    onFocus={(e) => setEmailFocus(true)}\r\n                                                    onBlur={(e) => setEmailFocus(false)}\r\n                                                />\r\n                                            </InputGroup>\r\n                                                <div>{stateError.error.Email}</div>\r\n                                            <br/>\r\n                                            <InputGroup\r\n                                                className={classnames({\r\n                                                    \"input-group-focus\": passwordFocus,\r\n                                                })}\r\n                                            >\r\n                                                <InputGroupAddon addonType=\"prepend\">\r\n                                                    <InputGroupText>\r\n                                                    <i className=\"tim-icons icon-single-02\" />\r\n                                                    </InputGroupText>\r\n                                                </InputGroupAddon>\r\n                                                <Input\r\n                                                    placeholder=\"Enter Password\"\r\n                                                    type=\"password\"\r\n                                                    name=\"Password\"\r\n                                                    value={stateInput.input.Password}\r\n                                                    onChange={(e) => handleChange(e)}\r\n                                                    onFocus={(e) => setPasswordFocus(true)}\r\n                                                    onBlur={(e) => setPasswordFocus(false)}\r\n                                                />\r\n                                            </InputGroup>\r\n                                                <div>{stateError.error.Password}</div>\r\n                                            <br/>\r\n                                            <Button className=\"btn-round\" color=\"success\" size=\"lg\">Log In</Button>\r\n                                        </Form>\r\n                                    </CardBody>\r\n                               </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <div className=\"register-bg\" \r\n                        />\r\n                            <div\r\n                                className=\"square square-1\"\r\n                                id=\"square1\"\r\n                                style={{ transform: squares1to6 }}\r\n                                \r\n                            />\r\n                            <div\r\n                                className=\"square square-2\"\r\n                                id=\"square2\"\r\n                                style={{ transform: squares1to6 }}\r\n                                \r\n                            />\r\n                            \r\n                            <div\r\n                                className=\"square square-3\"\r\n                                id=\"square3\"\r\n                                style={{ transform: squares1to6 }}\r\n                                \r\n                            />\r\n                            <div\r\n                                className=\"square square-4\"\r\n                                id=\"square4\"\r\n                                style={{ transform: squares1to6 }}\r\n                                \r\n                            />\r\n                            <div\r\n                                className=\"square square-5\"\r\n                                id=\"square5\"\r\n                                style={{ transform: squares1to6 }}\r\n                                \r\n                            />\r\n                            <div\r\n                                className=\"square square-6\"\r\n                                id=\"square6\"\r\n                                style={{ transform: squares1to6 }}\r\n                                \r\n                            />\r\n                    </Container> \r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n","E:\\frontend\\frontend-app\\src\\views\\LuanrCalenadr\\LunarCalendar.jsx",[],"E:\\frontend\\frontend-app\\src\\Layout\\Layout.jsx",[],"E:\\frontend\\frontend-app\\src\\components\\TextEditor\\TextEditor.js",["109"],"E:\\frontend\\frontend-app\\src\\components\\Navbars\\RegNavbar.js",["110"],"E:\\frontend\\frontend-app\\src\\views\\examples\\NewRegisterPage.js",["111","112","113","114"],"\r\nimport React from \"react\";\r\nimport classnames from \"classnames\";\r\n// reactstrap components\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardImg,\r\n  CardTitle,\r\n  Label,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\n// core components\r\nimport RegNavbar from \"components/Navbars/RegNavbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { registerThunkFunction } from \"../../redux/slices/authSlice\";\r\n\r\nexport default function RegisterPage() {\r\n  //mouse following square states  \r\n  const [squares1to6, setSquares1to6] = React.useState(\"\");\r\n  const [squares7and8, setSquares7and8] = React.useState(\"\");\r\n\r\n  //form focusing states\r\n  const [fullNameFocus, setFullNameFocus] = React.useState(false);\r\n  const [lastNameFocus, setLastNameFocus] = React.useState(false);\r\n  const [emailFocus, setEmailFocus] = React.useState(false);\r\n  const [passwordFocus, setPasswordFocus] = React.useState(false);\r\n\r\n  //states for validation purposes\r\n  const [stateInput,setStateInput]=React.useState({input: {} });\r\n  const [stateError,setStateError]=React.useState({error: {} });\r\n\r\n  //functions for validation\r\n  const validate = () => {\r\n      let input=stateInput.input;\r\n      let error ={};\r\n      let isValid= true;\r\n\r\n      if (!input[\"First\"]) {\r\n        isValid = false;\r\n        error[\"First\"] = \"Please enter your First name.\";\r\n      }\r\n\r\n      if (!input[\"Last\"]) {\r\n        isValid = false;\r\n        error[\"Last\"] = \"Please enter your Last name.\";\r\n      }\r\n\r\n      if (!input[\"Email\"]) {\r\n        isValid = false;\r\n        error[\"Email\"] = \"Please enter your Email.\";\r\n      }\r\n      if (typeof input[\"Email\"] !== \"undefined\") {\r\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if (!pattern.test(input[\"Email\"])) {\r\n          isValid = false;\r\n          error[\"Email\"] = \"Please enter valid email address.\";\r\n        }\r\n      }\r\n\r\n      if (!input[\"Password\"]) {\r\n        isValid = false;\r\n        error[\"Password\"] = \"Please enter a Password.\";\r\n      }\r\n\r\n      setStateError({\r\n\r\n        error: error\r\n\r\n      });\r\n      return isValid;\r\n\r\n      \r\n  }\r\n\r\n\r\n  //for authendication purposes\r\n    const dispatch = useDispatch();\r\n    const submitHandler = (email,password,firstName,lastName) => {\r\n        \r\n        dispatch(registerThunkFunction(email, password,firstName,lastName))\r\n    }\r\n\r\n  const handleChange = (event) => {\r\n      let input =stateInput.input;\r\n      input[event.target.name]=event.target.value;\r\n\r\n      setStateInput({\r\n          input: input\r\n      });\r\n      \r\n  };\r\n\r\n  const handleSubmit = (event) =>{\r\n      event.preventDefault();\r\n      if(validate()){\r\n        console.log(stateInput);\r\n        let input = {};\r\n        input[\"First\"] =\"\";\r\n        input[\"Last\"] =\"\";\r\n        input[\"Email\"] =\"\";\r\n        input[\"Password\"]=\"\";\r\n\r\n\r\n        setStateInput({\r\n          input:input\r\n        });   \r\n        alert('Demo Form is submited');   \r\n      }\r\n  }\r\n\r\n  //mouse following square effects on the page\r\n  React.useEffect(() => {\r\n    document.body.classList.toggle(\"register-page\");\r\n    document.documentElement.addEventListener(\"mousemove\", followCursor);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      document.body.classList.toggle(\"register-page\");\r\n      document.documentElement.removeEventListener(\"mousemove\", followCursor);\r\n    };\r\n  },[]);\r\n\r\n  const followCursor = (event) => {\r\n    let posX = event.clientX - window.innerWidth / 2;\r\n    let posY = event.clientY - window.innerWidth / 6;\r\n    setSquares1to6(\r\n      \"perspective(500px) rotateY(\" +\r\n        posX * 0.05 +\r\n        \"deg) rotateX(\" +\r\n        posY * -0.05 +\r\n        \"deg)\"\r\n    );\r\n    setSquares7and8(\r\n      \"perspective(500px) rotateY(\" +\r\n        posX * 0.02 +\r\n        \"deg) rotateX(\" +\r\n        posY * -0.02 +\r\n        \"deg)\"\r\n    );\r\n  };\r\n\r\n\r\n\r\n  //form of sign in\r\n  return (\r\n      \r\n    <>\r\n      \r\n      \r\n      <div className=\"wrapper\">\r\n        <div className=\"page-header\">\r\n          <div className=\"page-header-image\" />\r\n          <div className=\"content\">\r\n            <Container>\r\n              <Row>\r\n                <Col className=\"offset-lg-0 offset-md-3\" lg=\"5\" md=\"6\">\r\n                  \r\n                  <Card className=\"card-register\">\r\n                    <CardHeader>\r\n                      <CardImg\r\n                        alt=\"...\"\r\n                        src={require(\"assets/img/square-purple-1.png\").default}\r\n                      />\r\n                      <CardTitle tag=\"h4\">sign IN</CardTitle>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                      <Form className=\"form\" onSubmit={(e)=>handleSubmit(e)}>\r\n                        <InputGroup\r\n                          className={classnames({\r\n                            \"input-group-focus\": fullNameFocus,\r\n                          })}\r\n                        >\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"tim-icons icon-single-02\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"First Name\"\r\n                            type=\"text\"\r\n                            name=\"First\"\r\n                            value={stateInput.input.First}\r\n                            onChange={(e) => handleChange(e)}\r\n                            onFocus={(e) => setFullNameFocus(true)}\r\n                            onBlur={(e) => setFullNameFocus(false)}\r\n                          />\r\n                          \r\n                          \r\n                        </InputGroup>\r\n                            <div>{stateError.error.First}</div>\r\n                        <InputGroup\r\n                          className={classnames({\r\n                            \"input-group-focus\": lastNameFocus,\r\n                          })}\r\n                        >\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"tim-icons icon-single-02\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Last Name\"\r\n                            type=\"text\"\r\n                            name=\"Last\"\r\n                            value={stateInput.input.Last}\r\n                            onChange={(e) => handleChange(e)}\r\n                            onFocus={(e) => setLastNameFocus(true)}\r\n                            onBlur={(e) => setLastNameFocus(false)}\r\n                          />\r\n                        </InputGroup>\r\n                            <div>{stateError.error.Last}</div>\r\n                        <InputGroup\r\n                          className={classnames({\r\n                            \"input-group-focus\": emailFocus,\r\n                          })}\r\n                        >\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"tim-icons icon-email-85\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Email\"\r\n                            type=\"text\"\r\n                            name=\"Email\"\r\n                            value={stateInput.input.Email}\r\n                            onChange={(e) => handleChange(e)}\r\n                            onFocus={(e) => setEmailFocus(true)}\r\n                            onBlur={(e) => setEmailFocus(false)}\r\n                          />\r\n                        </InputGroup>\r\n                            <div>{stateError.error.Email}</div>\r\n                        <InputGroup\r\n                          className={classnames({\r\n                            \"input-group-focus\": passwordFocus,\r\n                          })}\r\n                        >\r\n                          <InputGroupAddon addonType=\"prepend\">\r\n                            <InputGroupText>\r\n                              <i className=\"tim-icons icon-lock-circle\" />\r\n                            </InputGroupText>\r\n                          </InputGroupAddon>\r\n                          <Input\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            name=\"Password\"\r\n                            value={stateInput.input.Password}\r\n                            onChange={(e) => handleChange(e)}\r\n                            onFocus={(e) => setPasswordFocus(true)}\r\n                            onBlur={(e) => setPasswordFocus(false)}\r\n                          />\r\n                        </InputGroup>\r\n                            <div>{stateError.error.Password}</div>\r\n                        <FormGroup check className=\"text-left\">\r\n                          <Label check>\r\n                            <Input type=\"checkbox\" />\r\n                            <span className=\"form-check-sign\" />I agree to the{\" \"}\r\n                            <a\r\n                              href=\"#pablo\"\r\n                              onClick={(e) => e.preventDefault()}\r\n                            >\r\n                              terms and conditions\r\n                            </a>\r\n                            .\r\n                          </Label>\r\n                        </FormGroup>\r\n                        <br/>\r\n                        <Button type=\"submit\" className=\"btn-round\" color=\"primary\" size=\"lg\">\r\n                            Register\r\n                        </Button>\r\n                      </Form>\r\n                    </CardBody>\r\n                    <CardFooter>\r\n                      \r\n                    </CardFooter>\r\n                    \r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"register-bg\" />\r\n              <div\r\n                className=\"square square-1\"\r\n                id=\"square1\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-2\"\r\n                id=\"square2\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-3\"\r\n                id=\"square3\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-4\"\r\n                id=\"square4\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-5\"\r\n                id=\"square5\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n              <div\r\n                className=\"square square-6\"\r\n                id=\"square6\"\r\n                style={{ transform: squares1to6 }}\r\n              />\r\n            </Container>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n",{"ruleId":"115","severity":1,"message":"116","line":20,"column":25,"nodeType":"117","messageId":"118","endLine":20,"endColumn":30},{"ruleId":"115","severity":1,"message":"119","line":20,"column":32,"nodeType":"117","messageId":"118","endLine":20,"endColumn":38},{"ruleId":"115","severity":1,"message":"120","line":20,"column":40,"nodeType":"117","messageId":"118","endLine":20,"endColumn":48},{"ruleId":"115","severity":1,"message":"121","line":22,"column":19,"nodeType":"117","messageId":"118","endLine":22,"endColumn":30},{"ruleId":"115","severity":1,"message":"122","line":28,"column":8,"nodeType":"117","messageId":"118","endLine":28,"endColumn":19},{"ruleId":"115","severity":1,"message":"123","line":29,"column":8,"nodeType":"117","messageId":"118","endLine":29,"endColumn":20},{"ruleId":"115","severity":1,"message":"124","line":30,"column":8,"nodeType":"117","messageId":"118","endLine":30,"endColumn":19},{"ruleId":"115","severity":1,"message":"125","line":16,"column":9,"nodeType":"117","messageId":"118","endLine":16,"endColumn":21},{"ruleId":"126","severity":1,"message":"127","line":29,"column":6,"nodeType":"128","endLine":29,"endColumn":8,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":97,"column":17,"nodeType":"132","endLine":97,"endColumn":118},{"ruleId":"130","severity":1,"message":"131","line":109,"column":17,"nodeType":"132","endLine":109,"endColumn":119},{"ruleId":"130","severity":1,"message":"131","line":121,"column":17,"nodeType":"132","endLine":121,"endColumn":120},{"ruleId":"115","severity":1,"message":"133","line":1,"column":28,"nodeType":"117","messageId":"118","endLine":1,"endColumn":39},{"ruleId":"115","severity":1,"message":"134","line":1,"column":41,"nodeType":"117","messageId":"118","endLine":1,"endColumn":49},{"ruleId":"115","severity":1,"message":"135","line":1,"column":51,"nodeType":"117","messageId":"118","endLine":1,"endColumn":57},{"ruleId":"115","severity":1,"message":"136","line":4,"column":10,"nodeType":"117","messageId":"118","endLine":4,"endColumn":21},{"ruleId":"115","severity":1,"message":"137","line":9,"column":7,"nodeType":"117","messageId":"118","endLine":9,"endColumn":24},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"115","severity":1,"message":"142","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":14},{"ruleId":"115","severity":1,"message":"143","line":9,"column":8,"nodeType":"117","messageId":"118","endLine":9,"endColumn":13},{"ruleId":"115","severity":1,"message":"144","line":13,"column":3,"nodeType":"117","messageId":"118","endLine":13,"endColumn":7},{"ruleId":"115","severity":1,"message":"145","line":14,"column":3,"nodeType":"117","messageId":"118","endLine":14,"endColumn":13},{"ruleId":"115","severity":1,"message":"146","line":15,"column":3,"nodeType":"117","messageId":"118","endLine":15,"endColumn":11},{"ruleId":"115","severity":1,"message":"147","line":16,"column":3,"nodeType":"117","messageId":"118","endLine":16,"endColumn":13},{"ruleId":"115","severity":1,"message":"148","line":17,"column":3,"nodeType":"117","messageId":"118","endLine":17,"endColumn":12},{"ruleId":"115","severity":1,"message":"149","line":18,"column":3,"nodeType":"117","messageId":"118","endLine":18,"endColumn":16},{"ruleId":"115","severity":1,"message":"150","line":19,"column":3,"nodeType":"117","messageId":"118","endLine":19,"endColumn":12},{"ruleId":"115","severity":1,"message":"151","line":5,"column":3,"nodeType":"117","messageId":"118","endLine":5,"endColumn":6},{"ruleId":"115","severity":1,"message":"152","line":8,"column":5,"nodeType":"117","messageId":"118","endLine":8,"endColumn":19},{"ruleId":"115","severity":1,"message":"153","line":9,"column":5,"nodeType":"117","messageId":"118","endLine":9,"endColumn":17},{"ruleId":"115","severity":1,"message":"154","line":10,"column":5,"nodeType":"117","messageId":"118","endLine":10,"endColumn":17},{"ruleId":"115","severity":1,"message":"155","line":11,"column":5,"nodeType":"117","messageId":"118","endLine":11,"endColumn":25},{"ruleId":"115","severity":1,"message":"156","line":20,"column":5,"nodeType":"117","messageId":"118","endLine":20,"endColumn":24},{"ruleId":"115","severity":1,"message":"151","line":2,"column":9,"nodeType":"117","messageId":"118","endLine":2,"endColumn":12},{"ruleId":"115","severity":1,"message":"157","line":2,"column":36,"nodeType":"117","messageId":"118","endLine":2,"endColumn":43},{"ruleId":"115","severity":1,"message":"158","line":34,"column":12,"nodeType":"117","messageId":"118","endLine":34,"endColumn":24},{"ruleId":"115","severity":1,"message":"159","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"115","severity":1,"message":"160","line":6,"column":3,"nodeType":"117","messageId":"118","endLine":6,"endColumn":9},{"ruleId":"115","severity":1,"message":"161","line":26,"column":8,"nodeType":"117","messageId":"118","endLine":26,"endColumn":17},{"ruleId":"115","severity":1,"message":"142","line":27,"column":8,"nodeType":"117","messageId":"118","endLine":27,"endColumn":14},{"ruleId":"115","severity":1,"message":"158","line":34,"column":10,"nodeType":"117","messageId":"118","endLine":34,"endColumn":22},{"ruleId":"115","severity":1,"message":"162","line":92,"column":11,"nodeType":"117","messageId":"118","endLine":92,"endColumn":24},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useDispatch' is defined but never used.","'LandingPage' is defined but never used.","'RegisterPage' is defined but never used.","'ProfilePage' is defined but never used.","'setAuthToken' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["163"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useCallback' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useSelector' is defined but never used.","'configJoditEditor' is assigned a value but never used.","no-native-reassign",["164"],"no-negated-in-lhs",["165"],"'Footer' is defined but never used.","'Cards' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'CardFooter' is defined but never used.","'CardTitle' is defined but never used.","'ListGroupItem' is defined but never used.","'ListGroup' is defined but never used.","'Col' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'CardImg' is defined but never used.","'squares7and8' is assigned a value but never used.","'Component' is defined but never used.","'Button' is defined but never used.","'RegNavbar' is defined but never used.","'submitHandler' is assigned a value but never used.",{"desc":"166","fix":"167"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"168","text":"169"},[1280,1282],"[dispatch]"]